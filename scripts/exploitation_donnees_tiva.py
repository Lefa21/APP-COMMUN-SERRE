import serial
import time
import requests # On importe la librairie pour faire des requêtes HTTP

# --- Configuration ---
SERIAL_PORT = 'COM3'
BAUD_RATE = 9600
API_URL = 'http://localhost/APP-COMMUN-SERRE/?controller=api&action=addSensorData'
API_KEY = 'serre_admin_master_key' # Utilisez une clé API valide
HUMIDITY_SENSOR_ID = 2 # L'ID de votre capteur d'humidité dans la table 'capteurs'

print(f"--- Démarrage du service de lecture du capteur sur {SERIAL_PORT} ---")
print(f"Envoi des données vers : {API_URL}")
print("Appuyez sur Ctrl+C pour arrêter le service.")

# Essayer de se connecter au port série
try:
    ser = serial.Serial(SERIAL_PORT, BAUD_RATE, timeout=2)
except serial.SerialException as e:
    print(f"❌ Erreur: Impossible d'ouvrir le port série {SERIAL_PORT}.")
    print(f"Détails: {e}")
    exit()

# Boucle infinie pour lire et envoyer les données en continu
while True:
    try:
        # Lire une ligne depuis le port série
        line = ser.readline().decode('utf-8').strip()

        # Si une ligne a été lue
        if line:
            print(f"[DATA REÇU] '{line}'")
            
            # Vérifier si la donnée est bien un nombre
            if line.replace('.', '', 1).isdigit():
                value = float(line)

                # Préparer les données à envoyer à l'API
                payload = {
                    'sensor_id': HUMIDITY_SENSOR_ID,
                    'value': value,
                    'api_key': API_KEY 
                }

                # Envoyer les données via une requête POST à votre site PHP
                try:
                    response = requests.post(API_URL, data=payload, timeout=5)
                    
                    # Vérifier si l'envoi a réussi
                    if response.status_code == 200 and response.json().get('success'):
                        print(f"✅ Succès : Donnée ({value}) envoyée au serveur.")
                    else:
                        print(f"⚠️ Échec de l'envoi. Statut: {response.status_code}, Réponse: {response.text}")

                except requests.exceptions.RequestException as e:
                    print(f"❌ Erreur réseau : Impossible de contacter le serveur. {e}")

            else:
                print(f"INFO : Donnée ignorée (non numérique).")
        
        # Petite pause pour ne pas surcharger le processeur
        time.sleep(1)

    except KeyboardInterrupt:
        # Permet de quitter proprement avec Ctrl+C
        print("\nArrêt du service.")
        break
    except Exception as e:
        print(f"Une erreur inattendue est survenue : {e}")
        time.sleep(5) # Attendre avant de réessayer

ser.close()
